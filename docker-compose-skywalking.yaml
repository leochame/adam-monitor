version: '3.8'

services:
  # ElasticSearch - SkyWalking数据存储
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ~/data/adam-monitor/es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always
    mem_limit: 1g

  # SkyWalking OAP服务器
  skywalking-oap:
    image: apache/skywalking-oap-server:9.5.0
    container_name: skywalking-oap
    depends_on:
      - elasticsearch
    environment:
      SW_STORAGE: elasticsearch
      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200
      SW_HEALTH_CHECKER: default
      SW_TELEMETRY: prometheus
      JAVA_OPTS: "-Xms2048m -Xmx2048m"
    ports:
      - "11800:11800"  # gRPC
      - "12800:12800"  # HTTP
    restart: always
    mem_limit: 2g

  # SkyWalking UI
  skywalking-ui:
    image: apache/skywalking-ui:9.5.0
    container_name: skywalking-ui
    depends_on:
      - skywalking-oap
    environment:
      SW_OAP_ADDRESS: http://skywalking-oap:12800
    ports:
      - "8080:8080"
    restart: always

  # ClickHouse服务
  clickhouse-server:
    image: clickhouse/clickhouse-server:23.8
    container_name: clickhouse-server
    environment:
      CLICKHOUSE_USER: "admin"
      CLICKHOUSE_PASSWORD: "secure_password_123"
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9004:9004"
    volumes:
      - /etc/localtime:/etc/localtime
      - ~/data/adam-monitor/ch_data:/var/lib/clickhouse/
      - ~/data/adam-monitor/ch_logs:/var/log/clickhouse-server/
      - ~/data/adam-monitor/user:/root/data/
    restart: always
    mem_limit: 2048m

  # ZooKeeper服务
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ~/data/adam-monitor/zk_data:/var/lib/zookeeper/data
      - ~/data/adam-monitor/zk_log:/var/lib/zookeeper/log
    restart: always

  # Kafka服务
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - ~/data/adam-monitor/kafka_data:/var/lib/kafka/data
    restart: always

  # Flink JobManager服务
  flink-jobmanager:
    image: apache/flink:1.17.1
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - |  
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        state.backend: filesystem
        state.checkpoints.dir: file:///opt/flink/checkpoints
    volumes:
      - ~/data/adam-monitor/flink_checkpoints:/opt/flink/checkpoints
    restart: always

  # Flink TaskManager服务
  flink-taskmanager:
    image: apache/flink:1.17.1
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - |  
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
        state.backend: filesystem
        state.checkpoints.dir: file:///opt/flink/checkpoints
    restart: always

  # 测试应用服务 - 用于运行adam-monitor-sdk测试
  adam-test-app:
    image: openjdk:17-jdk-slim
    container_name: adam-test-app
    depends_on:
      - skywalking-oap
      - kafka
      - clickhouse-server
    environment:
      # SkyWalking配置
      SW_AGENT_NAME: adam-test-service
      SW_AGENT_COLLECTOR_BACKEND_SERVICES: skywalking-oap:11800
      SW_LOGGING_LEVEL: INFO
      # 应用配置
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      CLICKHOUSE_HOST: clickhouse-server
      CLICKHOUSE_PORT: 8123
      JAVA_OPTS: >-
        -javaagent:/skywalking/agent/skywalking-agent.jar
        -Dskywalking.agent.service_name=adam-test-service
        -Dskywalking.collector.backend_service=skywalking-oap:11800
        -Dskywalking.agent.sample_n_per_3_secs=10
        -Dskywalking.plugin.toolkit.log.transmit_formatted=false
    volumes:
      - ./adam-monitor-sdk:/app
      - ./skywalking-agent:/skywalking/agent
    working_dir: /app
    command: >
      bash -c "
        echo 'Waiting for SkyWalking OAP to be ready...' &&
        while ! nc -z skywalking-oap 11800; do sleep 5; done &&
        echo 'SkyWalking OAP is ready!' &&
        echo 'Running Maven tests...' &&
        ./mvnw clean test -Dtest=AdamTraceContextTest
      "
    restart: "no"

  # Prometheus - 用于监控指标收集
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ~/data/adam-monitor/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: always

  # Grafana - 监控面板
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ~/data/adam-monitor/grafana_data:/var/lib/grafana
    restart: always

# 数据卷定义 - 已移至 /data 目录，无需定义 Docker 卷

# 网络配置
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 